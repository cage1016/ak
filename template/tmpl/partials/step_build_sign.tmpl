     - name: Configure macOS signing
        env:
          APPLE_DEVELOPER_ID: {{`${{ vars.APPLE_DEVELOPER_ID }}`}}
          APPLE_APPLICATION_CERT: {{`${{ secrets.APPLE_APPLICATION_CERT }}`}}
          APPLE_APPLICATION_CERT_PASSWORD: {{`${{ secrets.APPLE_APPLICATION_CERT_PASSWORD }}`}}
        run: |
          keychain="$RUNNER_TEMP/buildagent.keychain"
          keychain_password="password1"

          security create-keychain -p "$keychain_password" "$keychain"
          security default-keychain -s "$keychain"
          security unlock-keychain -p "$keychain_password" "$keychain"

          base64 -D <<<"$APPLE_APPLICATION_CERT" > "$RUNNER_TEMP/cert.p12"
          security import "$RUNNER_TEMP/cert.p12" -k "$keychain" -P "$APPLE_APPLICATION_CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S "apple-tool:,apple:,codesign:" -s -k "$keychain_password" "$keychain"
          rm "$RUNNER_TEMP/cert.p12"
      - name: codesign and notarize
        env:
          APPLE_ID: {{`${{ vars.APPLE_ID }}`}}
          APPLE_ID_PASSWORD: {{`${{ secrets.APPLE_ID_PASSWORD }}`}}
          APPLE_DEVELOPER_ID: {{`${{ vars.APPLE_DEVELOPER_ID }}`}}
        run: |
          # codesign
          codesign --timestamp --options=runtime -s "$APPLE_DEVELOPER_ID" -v .workflow/exe
          
          # pack alfredworkflow
          cd .workflow
          plutil -replace version -string "{{`${{ env.tag }}`}}" info.plist
          zip -r ../"{{.WorkflowName}}-{{`${{ env.tag }}`}}.alfredworkflow" .
          cd ..
          
          # zip alfredworkflow as zip archive for notarize
          zip -r "{{.WorkflowName}}-{{`${{ env.tag }}`}}.alfredworkflow.zip" "{{.WorkflowName}}-{{`${{ env.tag }}`}}.alfredworkflow"

          xcrun notarytool submit "{{.WorkflowName}}-{{`${{ env.tag }}`}}.alfredworkflow.zip" --apple-id "$APPLE_ID" --team-id "$APPLE_DEVELOPER_ID" --password "$APPLE_ID_PASSWORD"

          echo "artifact=$(echo "{{.WorkflowName}}-{{`${{ env.tag }}`}}.alfredworkflow")" >> $GITHUB_ENV